#BlueJ class context
comment0.params=columns\ column\ cellValues
comment0.target=RestrictFilter(java.lang.String[],\ java.lang.String,\ java.lang.String[])
comment0.text=\n\ Restricts\ rows\ in\ a\ Relation\ on\ a\ column\ by\ cell\ values\ specified.\n
comment1.params=
comment1.target=RestrictFilter\ clone()
comment1.text=\n\ Copies\ the\ filter.\n
comment2.params=name
comment2.target=int\ getColumnIndex(java.lang.String)
comment2.text=\n\ Helper\:\ Gets\ the\ column\ index\ at\ name.\n\ \n\ @param\ \ index\ \ \ the\ column\ index\ to\ retrieve\ name\n\ @return\ \ Column\ index\ or\ -1\ if\ not\ found\n
comment3.params=
comment3.target=java.lang.String[]\ getColumns()
comment3.text=\n\ Gets\ the\ column\ names\ provided\ when\ the\ filter\ was\ initialized.\n
comment4.params=row
comment4.target=Row\ transformRow(Row)
comment4.text=\n\ Returns\ the\ row\ back\ out\ as\ is.\n
comment5.params=row
comment5.target=boolean\ isRowSkipped(Row)
comment5.text=\n\ Checks\ to\ see\ if\ this\ row\ will\ be\ valid\ by\ checking\ to\ make\ sure\ valid\ values\ are\ present.\n\ Performs\ the\ check\ irrespective\ of\ uppercase/lowercase\ values.\ It\ also\ uses\ partial\ words\n\ to\ make\ sure\ that\ similar\ matches\ make\ the\ cut.\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\n\ Describes\ the\ filter\ in\ terms\ of\ Java.\n
numComments=7
