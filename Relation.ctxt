#BlueJ class context
comment0.params=driver\ columns
comment0.target=Relation(Driver,\ java.lang.String[])
comment0.text=\r\n\ Creates\ a\ relation\ with\ list\ of\ columns\ and\ current\ driver.\r\n\ Used\ internally\ by\ model/Driver.\ Don't\ use\ this\ in\ consumer.\r\n\ \r\n\ @param\ \ driver\ \ \ the\ driver\ hosting\ the\ Relation\r\n\ @param\ \ columns\ \ an\ array\ of\ columns\ to\ become\ the\ default\ Relation\ projection\r\n
comment1.params=index
comment1.target=java.lang.String\ getColumn(int)
comment1.text=\r\n\ Gets\ the\ projected\ column\ name\ at\ index.\r\n\ \r\n\ @param\ \ index\ \ \ the\ column\ index\ to\ retrieve\ name\r\n\ @return\ \ String\ with\ column\ name\r\n
comment2.params=index
comment2.target=java.lang.String\ getActualColumn(int)
comment2.text=\r\n\ Gets\ the\ actual\ column\ name\ at\ index\ (before\ the\ projection\ is\ limited).\r\n\ \r\n\ @param\ \ index\ \ \ the\ column\ index\ to\ retrieve\ name\r\n\ @return\ \ String\ with\ column\ name\r\n
comment3.params=name
comment3.target=int\ getColumnIndex(java.lang.String)
comment3.text=\r\n\ Gets\ the\ projected\ column\ index\ at\ name.\r\n\ \r\n\ @param\ \ index\ \ \ the\ column\ index\ to\ retrieve\ name\r\n\ @return\ \ Column\ index\ or\ -1\ if\ not\ found\r\n
comment4.params=name
comment4.target=int\ getActualColumnIndex(java.lang.String)
comment4.text=\r\n\ Gets\ the\ actual\ column\ index\ at\ name\ (before\ the\ projection\ is\ limited).\r\n\ \r\n\ @param\ \ index\ \ \ the\ column\ index\ to\ retrieve\ name\r\n\ @return\ \ Column\ index\ or\ -1\ if\ not\ found\r\n
comment5.params=
comment5.target=int\ columnCount()
comment5.text=\r\n\ Returns\ the\ projected\ number\ of\ columns.\r\n
comment6.params=
comment6.target=int\ actualColumnCount()
comment6.text=\r\n\ Returns\ the\ actual\ number\ of\ columns\ (before\ the\ projection\ is\ limited).\r\n
comment7.params=columns
comment7.target=void\ limitColumns(java.lang.String[])
comment7.text=\r\n\ Limits\ the\ columns\ (and\ column\ order)\ in\ the\ projection.\r\n
comment8.params=
comment8.target=Row\ next()
comment8.text=\r\n\ Gets\ the\ next\ Row.\r\n\ \r\n\ @return\ \ Row\ or\ null\ when\ no\ more\ rows.\r\n
numComments=9
